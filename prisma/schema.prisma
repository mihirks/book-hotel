// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  email String? @unique
  emailVerified String?
  image String?
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  favouriteIds String[] @db.ObjectId

  accounts Account[]
  listings Listing[]
  reservations Reservation[]
  payment Paymentstripe[]
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.String
  session_state String?

  user User @relation(fields: [userId],references: [id],onDelete: Cascade)
  @@unique([provider,providerAccountId])
}

model Listing{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  description String
  imagesScr String
  createdAt DateTime @default(now())
  category String
  roomCount Int
  bathroomCount Int
  guestCount Int
  locationValue String
  userId String @db.ObjectId
  price Int

  user User @relation(fields: [userId],references: [id],onDelete:Cascade)
  reservations Reservation[]
  payment Paymentstripe[]
}

model Reservation{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  listingId String @db.ObjectId
  startDate DateTime
  enddate DateTime
  totalPrice Int
  createdAt DateTime @default(now())

  user User @relation(fields: [userId],references: [id],onDelete:Cascade)
  listing Listing @relation(fields: [listingId],references: [id],onDelete:Cascade)
}

model Paymentstripe{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  sessionId String @unique
  userId String @db.ObjectId
  listingId String @db.ObjectId
  startDate DateTime
  endDate DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isProcessed Boolean @default(false)
  price Int
  

  user User @relation(fields: [userId],references: [id],onDelete:Cascade)
  listing Listing @relation(fields: [listingId],references: [id],onDelete:Cascade)
}